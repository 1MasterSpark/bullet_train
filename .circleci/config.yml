version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.7.4-node-browsers
        environment:
          PGHOST: localhost
          PGUSER: bullet_train
          RAILS_ENV: test
      - image: circleci/postgres
        environment:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: bullet_train_test
          POSTGRES_USER: bullet_train
    executor: ruby/default
    parallelism: 16
    steps:
      - checkout
      - run:
          name: Install Redis
          command: sudo apt-get install redis-server
      - run:
          name: Start Redis server
          command: sudo redis-server --daemonize yes
      - run:
          name: Install bundler
          command: gem install bundler:2.2.0
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore dependency caches
      - restore_cache:
          name: Restore gems cache
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          name: Restore yarn cache
          key: yarn-packages-v1-{{ checksum "yarn.lock" }}

      # Install dependencies
      - ruby/bundle-install
      - run:
          name: Install packages
          command: yarn install

      # Save dependency caches
      - save_cache:
          name: Save gem cache
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - save_cache:
          name: Save yarn cache
          key: yarn-packages-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      # We run this because the DB might not be available
      # for a while due to a race condition
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Run tests with Knapsack Pro
          command: |
            export RAILS_ENV=test
            bundle exec rails "knapsack_pro:queue:minitest[--verbose]"
          environment:
            KNAPSACK_PRO_CI_NODE_TOTAL: 16
      
      # If you don't want to use Knapsack Pro, then use this configuration:
      #
      # - run:
      #     name: Run unit tests
      #     command: bundle exec rails test
      # - run:
      #     name: Run system tests
      #     command: bundle exec rails test:system
